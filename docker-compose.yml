version: '3'
services:
  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: password123
      MYSQL_DATABASE: chatSchema
      MYSQL_USER: amr
      MYSQL_PASSWORD: password123
    restart: always
    ports:
       - "3307:3306"

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    restart: always
    ports:
      - 5672:5672
      - 15672:15672

  redis:
    image: redis:5-alpine
    container_name: redis
    restart: always
    ports:
      - "127.0.0.1:6379:6379"
  
  app:
    build: .
    command: bash -c "bash ./init.sh"
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
      - redis
      - elasticsearch
    ports:
      - '3000:3000'
    restart: always
    environment:
      DB_NAME: chatSchema
      DB_USER: amr
      DB_PASSWORD: password123
      DB_HOST: db
      REDIS_HOST: redis
      RABBITMQ_HOST: rabbitmq
      ES_HOST: elasticsearch

  chatworker:
    build: .
    command: rake sneakers:run
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: always
    environment:
      DB_NAME: chatSchema
      DB_USER: amr
      DB_PASSWORD: password123
      DB_HOST: db
      RABBITMQ_HOST: rabbitmq
      WORKERS: ChatWorker

  messageworker:
    build: .
    command: rake sneakers:run
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: always
    environment:
      DB_NAME: chatSchema
      DB_USER: amr
      DB_PASSWORD: password123
      DB_HOST: db
      RABBITMQ_HOST: rabbitmq
      WORKERS: MessageWorker
      ES_HOST: elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - http.port=9200
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ports:
      - '9200:9200'
      - '9300:9300'

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    environment:
      - SERVER_NAME=instabug.com
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  